server:
  port: 9527

spring:
  application:
    name: cloud-gateway-pengyu #把该微服务注册进7001
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # 开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_route  # 路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001  # 匹配后提供服务的路由地址
          uri: lb://cloud-payment-service  # 把上面写死的地址换成服务名，负载均衡同一个微服务名
          predicates:
            - Path=/payment/get/**  # 断言，路径相匹配的进行路由
        - id: payment_route2  # 路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001  # 匹配后提供服务的路由地址
          uri: lb://cloud-payment-service  # 把上面写死的地址换成服务名，负载均衡同一个微服务名
          filter:
            - AddRequestParameter=X-Request-Id,1024  #过滤工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id 值为1024
          predicates:
            - Path=/payment/lb/**  # 断言，路径相匹配的进行路由
#            - Header=X-Request-Id,\d+  #请求头要有X-Request-Id属性，且值为正整数的正则表达式
#            - After=2020-11-29T22:54:54.288+08:00[Asia/Shanghai]
            - Cookie=yuUser,yypp

#        - id: baidu_route1
#          uri: http://news.baidu.com
#          predicates:
#            - Path=/ent/**
#        - id: baidu_route2
#          uri: http://news.baidu.com
#          predicates:
#            - Path=/house/**

eureka:
  instance:
    hostname: cloud-gateway-service
  client:     #服务提供者注册进Eureka服务列表
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://eureka7001.com:7001/eureka
